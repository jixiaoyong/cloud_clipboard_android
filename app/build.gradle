plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'kotlin-kapt'
  id 'com.google.dagger.hilt.android'
}

android {
  namespace 'io.github.jd1378.otphelper'
  compileSdk 34

  defaultConfig {
    applicationId "io.github.jd1378.otphelper.cloud"
    minSdk 24
    targetSdk 34
    versionCode 21
    versionName "1.14.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    vectorDrawables {
      useSupportLibrary true
    }
  }

  buildTypes {
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  applicationVariants.all { variant ->
    variant.outputs.each { output ->
      def versionCodes = ["armeabi-v7a": 1, "x86": 2, "arm64-v8a": 3, "x86_64": 4]
      def abi = output.getFilter(com.android.build.OutputFile.ABI)
      output.versionCodeOverride = defaultConfig.versionCode * 1000
      if (abi != null) {  // null for the universal-debug, universal-release variants
        output.versionCodeOverride += versionCodes.get(abi)
      }

      def builtType = variant.buildType.name
      def versionName = variant.versionName
      def flavor = variant.flavorName
      def architecture = output.getFilter(com.android.build.OutputFile.ABI) ?: "-universal"
      output.outputFileName = "otp-helper-${flavor}-${builtType}-${versionName}-${architecture}-${output.versionCode}.apk"
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }
  buildFeatures {
    compose true
  }
  composeOptions {
    kotlinCompilerExtensionVersion '1.5.9'
  }
  packagingOptions {
    resources {
      excludes += '/META-INF/{AL2.0,LGPL2.1}'
    }
  }
  androidResources {
    generateLocaleConfig true
  }
}

dependencies {
  implementation platform('androidx.compose:compose-bom:2024.04.00')
  androidTestImplementation platform('androidx.compose:compose-bom:2024.04.00')

  implementation 'androidx.core:core-ktx:1.12.0'
  implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
  implementation("androidx.lifecycle:lifecycle-runtime-compose:2.7.0")
  implementation 'androidx.activity:activity-compose:1.8.2'
  implementation "androidx.compose.ui:ui"
  implementation "androidx.compose.ui:ui-tooling-preview"
  implementation 'androidx.compose.material3:material3'
  implementation("androidx.datastore:datastore-preferences:1.0.0")
  testImplementation 'junit:junit:4.13.2'
  androidTestImplementation 'androidx.test.ext:junit:1.1.5'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
  androidTestImplementation "androidx.compose.ui:ui-test-junit4"
  debugImplementation "androidx.compose.ui:ui-tooling"
  debugImplementation "androidx.compose.ui:ui-test-manifest"
  // debugImplementation because LeakCanary should only run in debug builds.
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.12'
  // navigation
  implementation "androidx.navigation:navigation-compose:2.7.7"
  // hilt
  implementation "com.google.dagger:hilt-android:2.50"
  kapt "com.google.dagger:hilt-compiler:2.50"
  // hilt for navigation compose
  implementation 'androidx.hilt:hilt-navigation-compose:1.2.0'
  // app compat (for locales)
  def appcompat_version = '1.7.0-alpha03'
  implementation "androidx.appcompat:appcompat:$appcompat_version"
  implementation "androidx.appcompat:appcompat-resources:$appcompat_version"

  // network
  implementation "com.squareup.retrofit2:retrofit:2.10.0"
  implementation "com.squareup.retrofit2:converter-gson:2.10.0"
  implementation("com.squareup.okhttp3:logging-interceptor:4.12.0")
}

// Allow references to generated code
kapt {
  correctErrorTypes true
}
